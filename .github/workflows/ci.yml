name: CI
# Continuous Integration

on:
  push:
    branches: [ master ]
    paths-ignore:
    - 'docs/**'
    - 'notes/**'
    - 'README.md'
    - 'third-party/**'

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true
        components: rustfmt, clippy

    - name: Run fmt check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

    - name: Run build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all-features --workspace  --exclude third-party

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all-features --workspace  --exclude third-party

    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features

#=================== Code Coverage ===================
  grcov:
    name: code coverage
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]
    steps:
      - uses: actions/checkout@v2
      - name: Install latest ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
            toolchain: ${{ matrix.rust }}
            profile: minimal
            override: true

      - name: Run cargo clean
        uses: actions-rs/cargo@v1
        with:
          command: clean

      - name: Run tests with -Zprofile
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off'
     
      - name: Run grcov
        id: grcov
        uses: actions-rs/grcov@v0.1
  
      - name: Upload coverage data to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ${{steps.grcov.outputs.report}}
          flags: ${{matrix.feature}}

